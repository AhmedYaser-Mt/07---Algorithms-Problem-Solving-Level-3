#include<iostream>
#include<iomanip>
using namespace std;

short RandomNumber(short From, short To)
{
	short RandNum = rand() % (To - From + 1) + From;
	return RandNum;
}

void FillMatrixWithRandomNumbers(short Arr[3][3], short Rows,short Columns)
{
	for (short i = 0;i < Rows;i++)
	{
		for (short j = 0;j < Columns;j++)
		{
			Arr[i][j] = RandomNumber(1, 100);
		}
	}
}

void PrintMatrix(short Arr[3][3], short Rows, short Columns)
{
	for (short i = 0;i < Rows;i++)
	{
		for (short j = 0;j < Columns;j++)
		{
			cout << setw(3) << Arr[i][j] << "\t";
		}
		cout << endl;
	}
}

short RowSum(short Arr[3][3], short RowNumber, short Columns)
{
	short Sum = 0;

	for (short j = 0;j < Columns;j++)
	{
		Sum += Arr[RowNumber][j];
	}

	return Sum;
}

void SumMatrixRowsInArray(short Arr[3][3], short ArrSum[3], short Rows, short Columns)
{
	for (short i=0;i< Rows;i++)
	{
		ArrSum[i] = RowSum(Arr, i, Columns);
	}
}

void PrintRowsSumArray(short ArrSum[3], short Rows)
{
	cout << "\nThe Following are the sum of each row in the Matrix :\n";

	for (short i = 0;i < Rows;i++)
	{
		cout << "Row " << i + 1 << " Sum = " << ArrSum[i] <<endl;
	}
}

int main()
{
	srand((unsigned)time(NULL));

	short Array[3][3], SumArray[3];
	FillMatrixWithRandomNumbers(Array, 3, 3);

	cout << "The Following is a 3x3 Random Matrix :\n";
	PrintMatrix(Array, 3, 3);

	SumMatrixRowsInArray(Array, SumArray, 3, 3);

	PrintRowsSumArray(SumArray, 3);

	return 0;
}